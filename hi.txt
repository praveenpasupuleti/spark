come on
https://0x0fff.com/spark-architecture/

drop table if exists ${hivevar:dbname}.omni_ptran_extract_temp;
create table if not exists ${hivevar:dbname}.omni_ptran_extract_temp
AS
SELECT 
ph_part_num,
ph_plan_num,
ph_part_sub_plan,
ph_part_ext,
ph_rel_part_num,
ph_rel_part_sub_plan,
ph_udf_text
FROM ${hivevar:espdbname}.omni_ptran_extract_h;

insert overwrite table ${hivevar:dbname}.${hivevar:tablename}
select s.ahbr_run_date as run_dte,
  s.ahbr_part_num as prtcpnt_nbr,
  s.ahbr_part_ext as prtcpnt_ext,
  s.ahbr_plan_num as plan_id,
  s.ahbr_plan_seq as plan_seq,
  s.ahbr_part_sub_plan as subplan_id,
  s.ahbr_post_num as post_num,
  s.ahbr_seq as seq_num,
  s.ahbr_trade_date as trade_dte,
  s.ahbr_rev as reversal_cde,
  s.ahbr_tran_code as tran_cde,
  s.ahbr_activity as actvty_cde,
  s.ahbr_usage_code_1 as usage_cde1,
  s.ahbr_usage_code_2 as usage_cde2,
  s.ahbr_usage_code_3 as usage_cde3,
  s.ahbr_usage_code_4 as usage_cde4,
  s.ahbr_usage_code_5 as usage_cde5,
  s.ahbr_std_usage_code_1 as std_usage_cde1,
  s.ahbr_std_usage_code_2 as std_usage_cde2,
  s.ahbr_std_usage_code_3 as std_usage_cde3,
  s.ahbr_std_usage_code_4 as std_usage_cde4,
  s.ahbr_std_usage_code_5 as std_usage_cde5,
  s.ahbr_run_time as run_time,
  s.ahbr_fund_id as fund_id,
  s.ic_ticker as ticker_symbol,
  s.ahbr_cash as tran_amt,
  s.ahbr_unshrs as tran_units,
  s.ahbr_shr_price as unit_share_price,
  s.pin as pin,
  s.tiaa_cntrct_nbr as tiaa_cntrct_nbr,
  s.cref_cntrct_nbr as cref_cntrct_nbr,
  s.indexed_cntrct_nbr as indexed_cntrct_nbr,
  s.ph_name as prtcpnt_name,
  s.td_orch_id as orchestration_id,
  s.vtran_type as vtran_type,
  s.ahbr_alt_post_num  as alternate_post_num,
  s.ph024_bene_cde as ph024_bene_cde,
  s.ph026_bene_account as ph026_bene_account,
  s.ph816_bene_accept_ind as ph816_bene_accept_ind,
  s.prefilter_ctgry_cde as prefilter_ctgry_cde,
  s.selcriteria_ctgry_cde as selcriteria_ctgry_cde,
  s.selcriteria_excl_rule_cde as selcriteria_excl_rule_cde,
  s.selcriteria_error_cde as selcriteria_error_cde,
  s.selcriteria_error_desc as selcriteria_error_desc,
  s.selcriteria_excptn_status_cde as selcriteria_excptn_status_cde,
  s.nonsecurity_ind as nonsecurity_ind,
  s.application_ctgry_cde as application_ctgry_cde,
  s.application_orphn_kexcl_cde as application_orphn_kexcl_cde,
  s.application_orphn_status_cde as application_orphn_status_cde,
  s.application_dri as application_dri,
  s.application_letter_type_cde as application_letter_type_cde,
  s.aggregation_ctgry_cde as aggregation_ctgry_cde,
  s.aggregation_error_cde as aggregation_error_cde,
  s.aggregation_dri as aggregation_dri,
  s.aggregation_letter_type as aggregation_letter_type,
  s.hdp_user as modified_by,
  s.process_date as modified_dte,
  s.upd_flag as upd_flag,
  s.ahbr_univ_cash as univ_cash,
  s.ahbr_shrcost as shrcost,
  s.ahbr_other_cash as other_cash,
  s.process_typ as process_typ,
  s.ph_addr_l1 as ph_addr_l1,
  s.ph_addr_l2 as ph_addr_l2,
  s.ph_addr_l3 as ph_addr_l3,
  s.ph_city as ph_addr_city,
  s.ph_state as ph_addr_state_cde,
  s.ph_zip as ph_addr_zip_cde,
  s.ph_roth_first_cntrb_date as roth_first_contrib_dte,
  s.ph_brth_date as birth_date,
  s.ph_death_date as death_date,
  s.fund_name as fund_name,
  s.reporting_seq as reporting_seq,
  s.unit_rate_ind as unit_rate_ind,
  s.external_cusip as external_cusip,
  0 as invstmnt_acct_seq,
  s.act_invesment_typ as act_invesment_typ,
  vt.vtd_create_date as vtd_create_date,
  vt.vtd_create_id as vtd_create_id,
  vt.vtd_update_date as vtd_update_date,
  vt.vtd_update_id as vtd_update_id,
  vt.vtd_udf_text_1 as vtd_udf_text,
  vt.custom_portfolio_id as custom_portfolio_id,
  vt.award_date as award_date,
  vt.roth_contrib_amt as roth_contrib_amt,
  vt.altrnt_carrier_usage_data as altrnt_carrier_usage_data,
  vt.altrnt_payee_name as alt_payee,
  vt.alt_payee_addr1 as alt_payee_addr1,
  vt.alt_payee_addr2 as alt_payee_addr2,
  vt.alt_payee_addr3 as alt_payee_addr3,
  vt.alt_payee_addr4 as alt_payee_addr4,
  vt.alt_payee_addr5 as alt_payee_addr5,
  vt.alt_payee_addr6 as alt_payee_addr6,
  vt.altrnt_carrier_addr_city as altrnt_carrier_addr_city,
  vt.altrnt_carrier_addr_state_cde as altrnt_carrier_addr_state_cde,
  vt.altrnt_carrier_addr_zip_cde as altrnt_carrier_addr_zip_cde,
  vt.altrnt_carrier_routing_nbr as altrnt_carrier_routing_nbr,
  vt.altrnt_payee_acct as alt_payee_ac,
  vt.fee_reference_postnum as fee_reference_postnum,
  vt.suppression_rqst_msg as suppression_rqst_msg,
  vt.qdro_note as qdro_note,
  vt.trnsfr_frqncy_ind as tranffreq,
  pl.pl_name_1 as plan_name_1,
  pl.pl_name_2 as plan_name_2,
  pl.pl_admin_name as admin_name,
  pl.pl_code_907 as plan_for_prices,
  pl.pl_code_942 as forf_inv,
  pl.pl_udf_002 as dca_value,
  pl.pl_product_id as product_id,
  trim(pl.udext_value_14) as plan_type,
  pl.udext_value_26 as dflt_alloc_type,
  sc.ahsc_source_name as source_name,
  sc.ahsc_sameas_src as same_as_src,
  sc.ahsc_udf_code as roth_type,
  sc.ahsc_roth_deferral as roth_deferral,
  af.ptaf_dec_cntrb as ptaf_dec_cntrb,
  '' as taxable_amt,
  '' as non_taxable_amt,
  '' as fed_tax_wheld,
  '' as state_tax_withheld,
  '' as qvec_wheld_fed,
  '' as qvec_wheld_state,
  '' as post86_ee_dist,
  '' as mand_whold_amt_calc,
  '' as mand_whold_amt,
  '' as pct_loc_tax,
  '' as fed_tax_ovr_pct,
  '' as state_code,
  '' as cref_cert_nbr,
  '' as mil_lev_typ,
  '' as transf_loan,
  '' as l3_orch_id,
  '' as l2_orch_id,
  case when s.ahbr_tran_code='444' and s.ahbr_activity=97 and
s.ahbr_part_sub_plan like 'GS%'
then
concat (S.tiaa_cntrct_nbr,'-',nvl(s.ahbr_usage_code_3,''))
else
case when s.ahbr_tran_code='444' and s.ahbr_activity=97 then
concat(nvl(PT.ph_udf_text,''),'-',nvl(s.ahbr_usage_code_3,''))
else ''
end end as loan_acct_nbr,
  '' as loan_payoff_amt,
  '' as fund_alloc_pct,
  '' as part_fund_alloc_pct,
  '' as alt_alloc_pct,
  '' as alt2_alloc_pct,
  '' as product_tier,
  '' as bank_model,
  '' as prdct_id,
  '' as inv_inactive_date,
  '' as inv_type,
  '' as price_id,
  prsm.pln_shrt_nm as prsm_pln_shrt_nm,
  prsm.pln_lgl_nm as plan_legal_name,
  bt.ahbt_key_data as key_data,
  prsm.irc_pln_typ_nm as plan_type_desc,
  pl.pl_client_id as client_id,
  s.udext_value_113 as indexed_rate_ind,
  pl.pl_code_089 as plntyp_pl089,
  s.AHBR_VTRAN_ORIG_DATE as vtran_orig_dte,
  s.AHBR_VOUCHER_NUM as voucher_nbr,
  case when  cast(s.ph816_bene_accept_ind as int) in (1,4) then dc.ph_part_num else null end AS decedent_ssn,
  case when  cast(s.ph816_bene_accept_ind as int) in (1,4) then dc.ph_empl_num2 else null end AS decedent_pin,
  case when  cast(s.ph816_bene_accept_ind as int) in (1,4) then dc.ph_udf_text else null end AS decedent_tiaa_cntrct_nbr,
  case when  cast(s.ph816_bene_accept_ind as int) in (1,4) then dc.ph_udf_text_2 else null end AS decedent_cref_cntrct_nbr,
  case when  cast(s.ph816_bene_accept_ind as int) in (1,4) then dc.udext_value_15 else null end AS decedent_indexed_cntrct_nbr,
  case when  cast(s.ph816_bene_accept_ind as int) in (1,4) then dc.ph_name else null end AS decedent_name,
  case when  cast(s.ph816_bene_accept_ind as int) in (1,4) then dc.ph_addr_l1 else null end AS decedent_addr_line1,
  case when  cast(s.ph816_bene_accept_ind as int) in (1,4) then dc.ph_addr_l2 else null end AS decedent_addr_line2,
  case when  cast(s.ph816_bene_accept_ind as int) in (1,4) then dc.ph_addr_l3 else null end AS decedent_addr_line3,
  case when  cast(s.ph816_bene_accept_ind as int) in (1,4) then dc.ph_city else null end AS decedent_addr_city,
  case when  cast(s.ph816_bene_accept_ind as int) in (1,4) then dc.ph_state else null end AS decedent_addr_state_cde,
  case when  cast(s.ph816_bene_accept_ind as int) in (1,4) then dc.ph_zip else null end AS decedent_addr_zip_cde,
  PH.PH_REL_PART_NUM as RELATED_PRTCPNT_NBR,
  PH.PH_REL_PART_SUB_PLAN as RELATED_SUBPLAN_ID

from ${hivevar:dbname}.selection_stage2 s
left join (SELECT vtd_create_date,
         vtd_create_id,
         vtd_update_date,
         vtd_update_id ,
         vtd_udf_text_1,
         custom_portfolio_id,
         award_date ,
         roth_contrib_amt ,
         altrnt_carrier_usage_data ,
         altrnt_payee_name ,
         alt_payee_addr1 ,
         alt_payee_addr2 ,
         alt_payee_addr3 ,
         alt_payee_addr4 ,
         alt_payee_addr5 ,
         alt_payee_addr6 ,
         altrnt_carrier_addr_city ,
         altrnt_carrier_addr_state_cde,
         altrnt_carrier_addr_zip_cde ,
         altrnt_carrier_routing_nbr ,
         altrnt_payee_acct,
         fee_reference_postnum,
         suppression_rqst_msg,
         qdro_note,
         trnsfr_frqncy_ind,
         ahbr_run_date,
         cast(ahbr_part_num AS int) as ahbr_part_num,
         ahbr_part_ext,
         ahbr_plan_num,
         ahbr_part_sub_plan,
         ahbr_seq,
         ahbr_trade_date,
         ahbr_run_time,
         vtd_rec_code,
         vtd_plan_num,
         vtd_fileid_name,
         vtd_fileid_ptr_indic,
         vtd_fileid_ext,
         vtd_tran_code,
         vtd_part_num,
         vtd_part_sub_plan,
         vtd_part_ext,
         vtd_fund_id,
         vtd_tran_seq
FROM  ${hivevar:dbname}.canonical_vtran) vt
on s.ahbr_run_date = vt.ahbr_run_date
and s.ahbr_part_num = vt.ahbr_part_num 
and s.ahbr_plan_num = vt.ahbr_plan_num
and s.ahbr_part_sub_plan = vt.ahbr_part_sub_plan
and s.ahbr_seq = vt.ahbr_seq
and trim(s.ahbr_part_ext) = trim(vt.ahbr_part_ext)
and s.ahbr_trade_date = vt.ahbr_trade_date
and s.ahbr_run_time = vt.ahbr_run_time
and s.vtd_rec_code = vt.vtd_rec_code
and s.vtd_plan_num = vt.vtd_plan_num
and s.vtd_fileid_name = vt.vtd_fileid_name
and s.vtd_fileid_ptr_indic = vt.vtd_fileid_ptr_indic
and s.vtd_fileid_ext = vt.vtd_fileid_ext
and s.vtd_tran_code = vt.vtd_tran_code
and s.vtd_part_num = vt.vtd_part_num
and s.vtd_part_sub_plan = vt.vtd_part_sub_plan
and s.vtd_fund_id = vt.vtd_fund_id
and s.vtd_tran_seq = vt.vtd_tran_seq
left join (select ptaf_plan_num,
cast(ptaf_part_num as int) as ptaf_part_num,
ptaf_part_sub_plan,
ptaf_part_ext,
ptaf_year,
ptaf_dec_cntrb from ${hivevar:espdbname}.omni_aftran_extract_h) af
on s.ahbr_plan_num = af.ptaf_plan_num
and s.ahbr_part_num = af.ptaf_part_num
and s.ahbr_part_sub_plan = af.ptaf_part_sub_plan
and TRIM(s.ahbr_part_ext) = TRIM(af.ptaf_part_ext)
and substr(s.ahbr_trade_date,1,4) = af.ptaf_year
left join (SELECT AHBT_PLAN_NUM,
AHBT_PART_NUM,
AHBT_PART_SUB_PLAN,
AHBT_PART_EXT,
MAX(AHBT_KEY_DATA) AS AHBT_KEY_DATA,
cast(AHBT_PART_NUM as int) as ahbt_part_num_int
FROM ${hivevar:espdbname}.omni_bttran_extract_h
WHERE AHBT_TYPE = 'UDSB'
GROUP BY AHBT_PLAN_NUM,
AHBT_PART_NUM,
AHBT_PART_SUB_PLAN,
AHBT_PART_EXT) bt
on s.ahbr_plan_num = bt.ahbt_plan_num
and s.ahbr_part_num = bt.ahbt_part_num_int
and s.ahbr_part_sub_plan = bt.ahbt_part_sub_plan
and TRIM(s.ahbr_part_ext) = TRIM(bt.AHBT_PART_EXT)
left join (SELECT ahsc_plan_num, 
ahsc_source_name, 
ahsc_sameas_src,
ahsc_udf_code,
ahsc_roth_deferral,
ahsc_source 
FROM ${hivevar:espdbname}.omni_sctran_extract_h) sc
on s.ahbr_plan_num = sc.ahsc_plan_num
and substr(s.ahbr_fund_id,3,1) = sc.ahsc_source
left join (select concat(pl_pl_prefix,pl_pl_suffix) as pl_pl_num,
pl_product_id,
pl_name_1,
pl_name_2,
pl_admin_name,
pl_code_907,
pl_code_942,
pl_udf_002,
udext_value_14,
udext_value_26,
pl_client_id,pl_code_089 
from ${hivevar:espdbname}.omni_pltran_extract_h) pl
on s.ahbr_plan_num = pl.pl_pl_num 
left join (select omni_pln_nbr,
pln_shrt_nm,
pln_lgl_nm,
irc_pln_typ_nm 
from ${hivevar:dbname}.prism_plan) prsm
on s.ahbr_plan_num = prsm.omni_pln_nbr
left join (SELECT bene_plan_num,
bene_part_sub_plan,
cast(bene_part_num as int) bene_part_num,
bene_part_ext,
ph_part_num,
ph_empl_num2,
ph_udf_text,
ph_udf_text_2,
udext_value_15,
ph_name,
ph_addr_l1,
ph_addr_l2,
ph_addr_l3,
ph_city,
ph_state,
ph_zip 
FROM  ${hivevar:espdbname}.omni_decedent_extract_h) dc 
on s.ahbr_plan_num = dc.bene_plan_num 
and s.ahbr_part_sub_plan = dc.bene_part_sub_plan
and s.ahbr_part_num = dc.bene_part_num
and TRIM(s.ahbr_part_ext) = TRIM(dc.bene_part_ext)
left outer join
${hivevar:dbname}.omni_ptran_extract_temp PT on
s.ahbr_part_num=cast(PT.ph_part_num as int)
and s.ahbr_plan_num=PT.ph_plan_num
and concat('RL1',s.ahbr_std_usage_code_4)=PT.ph_part_sub_plan
and trim(s.ahbr_part_ext)=trim(PT.ph_part_ext)
left outer join
${hivevar:dbname}.omni_ptran_extract_temp PH on
s.ahbr_part_num=cast(PH.ph_part_num as int)
and s.ahbr_plan_num=PH.ph_plan_num
and s.ahbr_part_sub_plan=PH.ph_part_sub_plan
and trim(s.ahbr_part_ext)=trim(PH.ph_part_ext);

